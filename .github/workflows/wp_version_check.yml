name: Version Check

on:
   workflow_call:
     inputs:
       wp_version_file:
         required: true
         type: string
       use_package_json:
         required: true
         type: boolean
       

jobs:
  check_version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required due to the weg Git works, without it this action won't be able to find any or the correct tags
      - id: wp_version
        env:
          WP_VERSION_FILE: ${{ inputs.wp_version_file }}
        run: echo "version=$(perl -n -e'/Version:\s*(\d+.\d+.\d+)/ && print $1' $WP_VERSION_FILE)" >> $GITHUB_OUTPUT
      - name: Check if wp_version is set
        if: ${{ !steps.wp_version.outputs.version }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('wp_version not set')
      - id: package_json_version
        if: ${{ inputs.wp_version_file }}
        run: |
          PACKAGE_JSON_VERSION=$(npm pkg get version | sed 's/"//g')
          echo "Version: $PACKAGE_JSON_VERSION"
          echo "version=$PACKAGE_JSON_VERSION" >> $GITHUB_OUTPUT
      - name: Check if package_json_version is set
        if: ${{ inputs.wp_version_file && !steps.package_json_version.outputs.version }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('package_version is not set')
      - name: Check if versions are equal
        if: ${{ inputs.wp_version_file && steps.wp_version.outputs.version != steps.package_json_version.outputs.version }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('wp_version and package_json_version must be the same')
      - name: Get latest tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - name: Get possible next versions
        id: nexttags
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Validate version
        if: ${{ steps.nexttags.outputs.major != steps.wp_version.outputs.version && steps.nexttags.outputs.minor != steps.wp_version.outputs.version && steps.nexttags.outputs.patch != steps.wp_version.outputs.version }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Invalid version')
